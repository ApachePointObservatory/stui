on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
        - "[0-9]+.[0-9]+.[0-9]+"  # Exclude pre-releases

name: Create Release

jobs:
    build:

      strategy:
        matrix:
          os: [macos-10.15, macos-11.0]

      runs-on: ${{ matrix.os }}

      steps:

        - name: Checkout code
          uses: actions/checkout@v2

        - uses: little-core-labs/get-git-tag@v3.0.1
          id: tagName

        # - name: Install ActiveTcl
        #   run: |
        #     wget "https://www.dropbox.com/s/7hbay0gfdnu71ly/ActiveTcl-8.5.18.0.298892-macosx10.5-i386-x86_64-threaded.dmg?dl=0" -P /Users/runner
        #     hdiutil attach "/Users/runner/ActiveTcl-8.5.18.0.298892-macosx10.5-i386-x86_64-threaded.dmg?dl=0"
        #     sudo installer -pkg /Volumes/ActiveTcl-8.5/ActiveTcl-8.5.pkg -target /
        #     hash -r

        - name: Setup conda
          uses: conda-incubator/setup-miniconda@v2
          with:
            auto-update-conda: false

        - name: Install dependencies
          run: |
            git clone --depth 1 --single-branch --branch python2 https://github.com/sdss/opscore.git ../opscore
            git clone --depth 1 --single-branch --branch apo https://github.com/sdss/actorkeys.git ../actorkeys
            git clone --depth 1 --single-branch --branch master https://github.com/r-owen/RO.git ../RO

        - name: Restore environment
          run: |
            conda create --name STUI --file BuildForMac/environment.txt
            conda activate STUI
            pip install numpy==1.10.1
            pip install py2app==0.22 matplotlib==2.2.5 pyfits==3.5 pyds9==1.8.1 twisted==20.3.0 pygame==1.9.6
          shell: bash -l {0}

        - name: Build Imaging
          run: |
            conda activate STUI
            wget http://effbot.org/downloads/Imaging-1.1.7.tar.gz
            tar xvf Imaging-1.1.7.tar.gz
            python Imaging-1.1.7/setup.py install
            rm -Rf Imaging*
          shell: bash -l {0}

        - name: List environment
          run: |
            conda activate STUI
            echo "pip list"
            pip list
            echo "conda list"
            conda list
          shell: bash -l {0}

        - name: Build STUI
          shell: bash -l {0}
          run: |
            conda activate STUI
            python releaseNewVersion.py
          env:
            # DYLD_FRAMEWORK_PATH: /Library/Frameworks/Tk.framework:/Library/Frameworks/Tcl.framework:/Library/Frameworks
            PYTHONPATH: ${{github.workspace}}:${{github.workspace}}/../RO/python:${{github.workspace}}/../opscore/python:${{github.workspace}}/../actorkeys/python:${{github.workspace}}/BuildForMac/assets/external/python:${{github.workspace}}/BuildForMac/assets/plc/python
            RO_DIR: ${{github.workspace}}/../RO
            OPSCORE_DIR: ${{github.workspace}}/../opscore
            ACTORKEYS_DIR: ${{github.workspace}}/../actorkeys

        - name: Create Release
          id: create_release
          uses: softprops/action-gh-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ github.ref }}
            name: STUI ${{ github.ref }}
            body:
            draft: false
            prerelease: false

        - name: Upload Release Asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: /Users/runner/STUI_${{ steps.tagName.outputs.tag }}_Source/BuildForMac/dist/STUI_${{ steps.tagName.outputs.tag }}_Mac.dmg
            asset_name: STUI_${{ steps.tagName.outputs.tag }}_${{ matrix.os }}.dmg
            asset_content_type: application/octet-stream
