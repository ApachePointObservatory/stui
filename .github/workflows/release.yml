on:
    push:
        # Sequence of patterns matched against refs/tags
        tags:
            - "[0-9]+.[0-9]+.[0-9]+"  # Exclude pre-releases

name: Create Release

jobs:
    build:

      strategy:
        matrix:
          os: [macos-10.15]

      runs-on: ${{ matrix.os }}

      steps:

        - name: Checkout code
          uses: actions/checkout@v2

        - uses: little-core-labs/get-git-tag@v3.0.1
          id: tagName

        - name: Setup conda
          uses: s-weigand/setup-conda@v1
          with:
            update-conda: false
            conda-channels: defaults, free

        - name: Install dependencies
          run: |
            git clone --depth 1 --single-branch --branch python2 https://github.com/sdss/opscore.git ../opscore
            git clone --depth 1 --single-branch --branch apo https://github.com/sdss/actorkeys.git ../actorkeys
            git clone --depth 1 --single-branch --branch master https://github.com/r-owen/RO.git ../RO

        - name: Restore environment
          run: |
            conda env update --file BuildForMac/environment.yml --name base

        - name: Build Imaging
          run: |
            wget http://effbot.org/downloads/Imaging-1.1.7.tar.gz
            tar xvf Imaging-1.1.7.tar.gz
            python Imaging-1.1.7/setup.py install
            rm -Rf Imaging*

        - name: Build STUI
          run: |
            python releaseNewVersion.py
          env:
            PYTHONPATH: ${{github.workspace}}:${{github.workspace}}/../RO/python:${{github.workspace}}/../opscore/python:${{github.workspace}}/../actorkeys/python:${{github.workspace}}/BuildForMac/assets/external/python:${{github.workspace}}/BuildForMac/assets/plc/python
            RO_DIR: ${{github.workspace}}/../RO
            OPSCORE_DIR: ${{github.workspace}}/../opscore
            ACTORKEYS_DIR: ${{github.workspace}}/../actorkeys

        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ github.ref }}
            release_name: STUI ${{ github.ref }}
            body:
            draft: false
            prerelease: false

        - name: Upload Release Asset
          id: upload-release-asset
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
            asset_path: /Users/runner/STUI_${{ steps.tagName.outputs.tag }}_Source/BuildForMac/dist/STUI_${{ steps.tagName.outputs.tag }}_Mac.dmg
            asset_name: STUI_${{ steps.tagName.outputs.tag }}_10.15.dmg
            asset_content_type: application/octet-stream
